# Build on MacOS

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request except for documentation changes
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

  # Allow from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run build script
        run: bash build.sh

      # Build test iOS App - Clean
      - name: Prep Test iOS App
        run: xcodebuild clean -project "example/iOS Test App/iOS Test App.xcodeproj"

      # Build test iOS App - Build
      - name: Build Test iOS App
        run: xcodebuild build -project "example/iOS Test App/iOS Test App.xcodeproj" -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO -arch x86_64
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ./artifacts
# This workflow contains a job to create a release and attach artifacts
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
 # Get the tag name
      - name: Get tag name
        id: get_tag_name
        run: echo "::set-output name=tag_name::${GITHUB_REF#refs/tags/}"
      # Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag_name.outputs.tag_name }}
          release_name: Release ${{ steps.get_tag_name.outputs.tag_name }}
          draft: false
          prerelease: false

      # Download build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: ./artifacts

      # Upload build artifacts to release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts
          asset_name: build-artifacts.zip
          asset_content_type: application/zip
