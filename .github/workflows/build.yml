# Build on MacOS

name: build

on:
  workflow_dispatch:
    inputs:
      doRelease:
        description: 'Publish new release'
        type: boolean
        default: false
        required: false
      tag:
        type: string
        description: 'Release version tag (e.g. v1.2.3)'
        required: true
      ref:
        type: string
        description: 'Git ref from which to release'
        required: true
        default: 'master'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run build script
        run: bash build.sh

      # Build test iOS App - Clean
      - name: Prep Test iOS App
        run: xcodebuild clean -project "example/iOS Test App/iOS Test App.xcodeproj"

      # Build test iOS App - Build
      - name: Build Test iOS App
        run: xcodebuild build -project "example/iOS Test App/iOS Test App.xcodeproj" -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO -arch x86_64
      
      - name: Package compiled files
        run: |
          tar -czvf archive.tar.gz /Users/runner/work/Build-OpenSSL-cURL/Build-OpenSSL-cURL/archive

      - uses: actions/checkout@v3     
      # Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false

      - name: Create GitHub Release
        id: action_release
        uses: softprops/action-gh-release@v2
        with:
          files: archive.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

